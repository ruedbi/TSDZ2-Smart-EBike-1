diff --git a/src/ebike_app.c b/src/ebike_app.c
index 593126d..69a1b53 100644
--- a/src/ebike_app.c
+++ b/src/ebike_app.c
@@ -493,6 +493,7 @@ static void ebike_control_motor(void)
 	// E07 (E04 blinking for XH18)
 #if OVERCURRENT_DELAY > 0	// overcurrent error enabled
 	#ifndef __CDT_PARSER__	// avoid Eclipse syntax check
+// clang-format off
 	__asm
 		ld a, 0x53eb // ADC1->DB5RL
 		cp a, _ui8_adc_battery_overcurrent
@@ -500,6 +501,7 @@ static void ebike_control_motor(void)
 		mov _ui8_error_battery_overcurrent+0, #ERROR_BATTERY_OVERCURRENT
 	00011$:
 	__endasm;
+// clang-format on
 	#endif
 	if (ui8_error_battery_overcurrent) {
 		ui8_error_battery_overcurrent_counter++;
diff --git a/src/motor.c b/src/motor.c
index 8b6f1a3..cfba8cf 100644
--- a/src/motor.c
+++ b/src/motor.c
@@ -220,6 +220,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
     // bit 5 of TIM1->CR1 contains counter direction (0=up, 1=down)
     if (TIM1->CR1 & 0x10) {
 		#ifndef __CDT_PARSER__ // disable Eclipse syntax check
+// clang-format off
         __asm
             push cc             // save current Interrupt Mask (I1,I0 bits of CC register)
             sim                 // disable interrupts  (set I0,I1 bits of CC register to 1,1)
@@ -232,6 +233,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
             pop cc              // enable interrupts (restores previous value of Interrupt mask)
                                 // Hall GPIO buffered interrupt could fire now
         __endasm;
+// clang-format on
         #endif
         // ui8_temp stores the current Hall sensor state
         // ui16_b stores the Hall sensor counter value of the last transition
@@ -339,12 +341,14 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
 			}
             // update last hall sensor state
             #ifndef __CDT_PARSER__ // disable Eclipse syntax check
+// clang-format off
             __asm
                 // speed optimization ldw, ldw -> mov,mov
                 // ui16_hall_60_ref_old = ui16_b;
                 mov _ui16_hall_60_ref_old+0, _ui16_b+0
                 mov _ui16_hall_60_ref_old+1, _ui16_b+1
             __endasm;
+// clang-format on
             #endif
             ui8_hall_sensors_state_last = ui8_temp;
         }
@@ -392,6 +396,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
         ui8_svm_table_index = ui8_temp + ui8_motor_phase_absolute_angle + ui8_g_foc_angle;
         */
         #ifndef __CDT_PARSER__ // disable Eclipse syntax check
+// clang-format off
         __asm
             clr _ui8_temp+0
             tnz _ui8_motor_commutation_type+0
@@ -590,10 +595,12 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
             ld  _ui16_c+1, a
         00029$:
         __endasm;
+// clang-format on
         #endif
 
     #ifdef TIME_DEBUG
         #ifndef __CDT_PARSER__ // avoid Eclipse syntax check
+// clang-format off
         __asm
             ld  a, 0x5250
             and a, #0x10 // counter direction end irq
@@ -601,6 +608,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
             ld  _ui16_pwm_cnt_down_irq+0, a      // ui16_pwm_cnt_down_irq MSB = TIM1->CNTRH | direction
             mov _ui16_pwm_cnt_down_irq+1, 0x525f // ui16_pwm_cnt_down_irq LSB = TIM1->CNTRL
         __endasm;
+// clang-format on
         #endif
     #endif
 
@@ -622,6 +630,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
         TIM1->CCR1L = (uint8_t)(ui16_a);
         */
         #ifndef __CDT_PARSER__ // avoid Eclipse syntax check
+// clang-format off
         __asm
         push cc             // save current Interrupt Mask (I1,I0 bits of CC register)
         sim                 // disable interrupts  (set I0,I1 bits of CC register to 1,1)
@@ -635,6 +644,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
         pop cc           // enable interrupts (restores previous value of Interrupt mask)
                          // Hall GPIO buffered interrupt could fire now
         __endasm;
+// clang-format on
         #endif
 
 
@@ -677,6 +687,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
         */
 
         #ifndef __CDT_PARSER__ // avoid Eclipse syntax check
+// clang-format off
         __asm
         ldw x, 0x53EC
         ldw _ui16_adc_voltage, x
@@ -758,6 +769,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
         clr _ui8_foc_flag+0
     00052$:
         __endasm;
+// clang-format on
         #endif
 		
         /****************************************************************************/
@@ -972,6 +984,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
 
         #ifdef TIME_DEBUG
             #ifndef __CDT_PARSER__ // avoid Eclipse syntax check
+// clang-format off
             __asm
                 ld  a, 0x5250
                 and a, #0x10 // counter direction end irq
@@ -980,6 +993,7 @@ void TIM1_CAP_COM_IRQHandler(void) __interrupt(TIM1_CAP_COM_IRQHANDLER)
                 mov _ui16_pwm_cnt_up_irq+1, 0x525f // ui16_pwm_cnt_up_irq LSB = TIM1->CNTRL
             __endasm;
             #endif
+// clang-format on
         #endif
     }
 	
